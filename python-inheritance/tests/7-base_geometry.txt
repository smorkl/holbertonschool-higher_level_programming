>>> import sys
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()
>>> type(bg)
<class '7-base_geometry.BaseGeometry'>

>>> bg.area()
Traceback (most recent call last):
    raise (Exception("area() is not implemented"))
Exception: area() is not implemented

>>> BaseGeometry.integer_validator("name", "John", "hola")
Traceback (most recent call last):
    ...
TypeError: John must be an integer

>>> BaseGeometry.integer_validator("name", "age", -0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0


>>> BaseGeometry.integer_validator("name", "distance", -4)
Traceback (most recent call last):
    ...
ValueError: distance must be greater than 0

>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> bg.integer_validator("age", True)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> integer_validator("age", {3, 4})
Traceback (most recent call last):
  File "/usr/lib/python3.9/doctest.py", line 1336, in __run
    exec(compile(example.source, filename, "single",
  File "<doctest 7-base_geometry.txt[11]>", line 1, in <module>
    integer_validator("age", {3, 4})
NameError: name 'integer_validator' is not defined

>>> bg.integer_validator("age", None)
Traceback (most recent call last):
    ...
TypeError: age must be an integer
